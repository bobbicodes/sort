["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\r\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\r\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\r\n});\r\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\r\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\r\n});\r\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\r\nvar args__4835__auto__ = [];\r\nvar len__4829__auto___32380 = arguments.length;\r\nvar i__4830__auto___32381 = (0);\r\nwhile(true){\r\nif((i__4830__auto___32381 < len__4829__auto___32380)){\r\nargs__4835__auto__.push((arguments[i__4830__auto___32381]));\r\n\r\nvar G__32383 = (i__4830__auto___32381 + (1));\r\ni__4830__auto___32381 = G__32383;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4836__auto__ = ((((2) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4836__auto__);\r\n});\r\n\r\n(devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\r\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\r\nif(cljs.core.truth_(f)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(''),\"\\n\",\"f\"].join('')));\r\n}\r\n\r\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\r\n}));\r\n\r\n(devtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq32287){\r\nvar G__32288 = cljs.core.first(seq32287);\r\nvar seq32287__$1 = cljs.core.next(seq32287);\r\nvar G__32289 = cljs.core.first(seq32287__$1);\r\nvar seq32287__$2 = cljs.core.next(seq32287__$1);\r\nvar self__4816__auto__ = this;\r\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__32288,G__32289,seq32287__$2);\r\n}));\r\n\r\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\r\nif(cljs.core.truth_((function (){var or__4223__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\r\nif(or__4223__auto__){\r\nreturn or__4223__auto__;\r\n} else {\r\nreturn devtools.formatters.printing.markup_QMARK_(value);\r\n}\r\n})())){\r\nreturn value;\r\n} else {\r\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWriter}\r\n*/\r\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\r\nthis.group = group;\r\nthis.markup_db = markup_db;\r\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\r\nthis.cljs$lang$protocol_mask$partition1$ = 0;\r\n});\r\n(devtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\r\nvar self__ = this;\r\nvar _ = this;\r\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a));\r\n}));\r\n\r\n(devtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\r\nvar self__ = this;\r\nvar _ = this;\r\nreturn self__.group;\r\n}));\r\n\r\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null)));\r\n}));\r\n\r\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn null;\r\n}));\r\n\r\n(devtools.formatters.printing.TemplateWriter.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\r\n}));\r\n\r\n(devtools.formatters.printing.TemplateWriter.cljs$lang$type = true);\r\n\r\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\");\r\n\r\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"devtools.formatters.printing/TemplateWriter\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\r\n */\r\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\r\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\r\n});\r\n\r\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\r\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\r\n});\r\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\r\nvar temp__5751__auto__ = cljs.core.first(cljs.core.first(group));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar tag = temp__5751__auto__;\r\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\r\nif(cljs.core.truth_((function (){var and__4221__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\r\nif(and__4221__auto__){\r\nvar or__4223__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\r\nif(cljs.core.truth_(or__4223__auto__)){\r\nreturn or__4223__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\r\n}\r\n} else {\r\nreturn and__4221__auto__;\r\n}\r\n})())){\r\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\r\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\r\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\r\n} else {\r\nreturn group;\r\n}\r\n});\r\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\r\nif(cljs.core.truth_(circular_QMARK_)){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\r\n} else {\r\nreturn group;\r\n}\r\n});\r\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__32328_SHARP_){\r\nreturn (!((cljs.core.meta(p1__32328_SHARP_) == null)));\r\n})))){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\r\n} else {\r\nreturn group;\r\n}\r\n});\r\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\r\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))))) || (((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))))))){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\r\n} else {\r\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))))))){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\r\n} else {\r\nreturn group;\r\n\r\n}\r\n}\r\n});\r\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\r\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\r\n});\r\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\r\nvar map__32343 = opts;\r\nvar map__32343__$1 = cljs.core.__destructure_map(map__32343);\r\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32343__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\r\nif(cljs.core.truth_((function (){var or__4223__auto__ = (function (){try{if((!((obj == null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\r\nreturn true;\r\n} else {\r\nif((!obj.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\r\n}\r\n}catch (e32345){var _e__31031__auto__ = e32345;\r\nreturn false;\r\n}})();\r\nif(cljs.core.truth_(or__4223__auto__)){\r\nreturn or__4223__auto__;\r\n} else {\r\ntry{if((!((obj == null)))){\r\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\r\nreturn true;\r\n} else {\r\nif((!obj.cljs$lang$protocol_mask$partition$)){\r\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n} else {\r\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\r\n}\r\n}catch (e32347){var _e__31031__auto__ = e32347;\r\nreturn false;\r\n}}\r\n})())){\r\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\r\n} else {\r\nvar temp__5751__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\r\nif(cljs.core.truth_(temp__5751__auto__)){\r\nvar atomic_markup = temp__5751__auto__;\r\nreturn cljs.core._write(writer,atomic_markup);\r\n} else {\r\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\r\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\r\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\r\n}\r\n}\r\n});\r\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\r\nvar _STAR_current_state_STAR__orig_val__32356 = devtools.formatters.state._STAR_current_state_STAR_;\r\nvar _STAR_current_state_STAR__temp_val__32357 = devtools.formatters.state.get_current_state();\r\n(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__32357);\r\n\r\ntry{var map__32363 = opts;\r\nvar map__32363__$1 = cljs.core.__destructure_map(map__32363);\r\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32363__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\r\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\r\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\r\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\r\n\r\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\r\n\r\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\r\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__32356);\r\n}});\r\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\r\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\r\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\r\nvar job_fn = (function (){\r\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\r\n});\r\nvar temp__5751__auto___32402 = devtools.formatters.state.get_managed_print_level();\r\nif(cljs.core.truth_(temp__5751__auto___32402)){\r\nvar managed_print_level_32403 = temp__5751__auto___32402;\r\nvar _STAR_print_level_STAR__orig_val__32367_32404 = cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_level_STAR__temp_val__32368_32405 = managed_print_level_32403;\r\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__32368_32405);\r\n\r\ntry{devtools.formatters.state.update_current_state_BANG_((function (p1__32366_SHARP_){\r\nreturn devtools.formatters.state.set_managed_print_level(p1__32366_SHARP_,null);\r\n}));\r\n\r\njob_fn();\r\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__32367_32404);\r\n}} else {\r\njob_fn();\r\n}\r\n\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\r\n});\r\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\r\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\r\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\r\n}));\r\n});\r\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\r\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\r\nreturn cljs.core._pr_writer(value,writer,opts);\r\n}));\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^Q","~$devtools.format","^R","~$devtools.protocols","^S","~$devtools.formatters.state","^T","~$devtools.formatters.helpers","^U","~$cljs.core","^V","~$goog","^W"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^S","~$expandable?","^U","~$ITemplate","^S","~$IDevtoolsFormat","^R","~$get-managed-print-level","^T","~$get-current-state","^T","~$ISurrogate","^S","~$should-render?","^U","~$set-managed-print-level","^T","~$directly-printable?","^U","~$pref","^Q","~$push-object-to-current-history!","^T","~$update-current-state!","^T","~$abbreviated?","^U","~$IFormat","^S","~$*current-state*","^T","~$cljs-value?","^U","~$is-circular?","^T"],"^Z",["^ ","^H","^H","^V","^V","^Q","^Q"],"~:form",["~#list",["~$ns","^L",["^1C",["^Z",["^H","~:refer",["^G"]]]],["^1C",["^Y",["^Q","^1E",["^1:"]],["^R","^1E",["^13"]],["^S","^1E",["^12","^10","^16","^1>"]],["^T","^1E",["^1;","^1?","^15","^1A","^14","^18","^1<"]],["^U","^1E",["^1@","^11","^1=","^19","^17"]]]]]],"~:flags",["^ ","^Z",["^J",[]],"^Y",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^Q","^R","^S","^T","^U"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1685823460415,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer because pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.printing/markup?","value","cljs.core/meta","devtools.formatters.printing/mark-as-markup","cljs.core/with-meta","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","devtools.formatters.printing/build-markup","seq32287","G__32288","cljs.core/first","cljs.core/next","G__32289","self__4816__auto__","markup-db","fn-key","args","f","cljs.core.get","js/Error","cljs.core.apply","devtools.formatters.printing/wrap-value-as-reference-if-needed","or__4223__auto__","devtools.formatters.helpers/directly-printable?","devtools.formatters.printing.build_markup","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","devtools.formatters.printing/TemplateWriter","devtools.formatters.printing/->TemplateWriter","group","_","a","cljs.core.concat","o","devtools.formatters.printing/make-template-writer","devtools.formatters.printing/already-reference?","temp__5751__auto__","tag","cljs.core._EQ_","devtools.formatters.printing/wrap-group-in-reference-if-needed","obj","and__4221__auto__","cljs.core/not","devtools.formatters.helpers/expandable?","devtools.formatters.helpers/abbreviated?","expandable-markup","surrogate-markup","reference-markup","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","circular?","devtools.formatters.printing/wrap-group-in-meta-if-needed","p1__32328#","devtools.formatters.helpers/should-render?","cljs.core.partial","devtools.formatters.printing/detect-edge-case-and-patch-it","cljs.core/count","cljs.core.nth","devtools.formatters.printing/post-process-printed-output","output-group","devtools.formatters.printing/alt-printer-job","writer","opts","map__32343","cljs.core/--destructure-map","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","_e__31031__auto__","e32345","devtools.format/IDevtoolsFormat","e32347","devtools.protocols/IFormat","atomic-markup","default-impl","inner-opts","cljs.core/*print-level*","cljs.core.assoc","devtools.formatters.printing/alt-printer-impl","*current-state*-orig-val__32356","*current-state*-temp-val__32357","devtools.formatters.state/*current-state*","devtools.formatters.state/get-current-state","map__32363","devtools.formatters.state/is-circular?","inner-writer","devtools.formatters.state/push-object-to-current-history!","devtools.formatters.printing/managed-print","printer","devtools.prefs/pref","job-fn","managed-print-level","devtools.formatters.state/get-managed-print-level","*print-level*-orig-val__32367","*print-level*-temp-val__32368","p1__32366#","devtools.formatters.state/update-current-state!","devtools.formatters.state/set-managed-print-level","devtools.formatters.printing/managed-print-via-writer","cljs.core/pr-seq-writer","devtools.formatters.printing/managed-print-via-protocol","cljs.core/-pr-writer"]],"~:used-vars",["^J",["~$devtools.format/IDevtoolsFormat","~$cljs.core/--destructure-map","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$devtools.protocols/IFormat","~$cljs.core/*print-level*","~$devtools.formatters.printing/make-template-writer","~$devtools.formatters.state/is-circular?","~$devtools.formatters.helpers/directly-printable?","~$cljs.core/=","~$devtools.formatters.printing/already-reference?","~$devtools.formatters.printing/managed-print-via-writer","~$cljs.core/partial","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$devtools.formatters.printing/alt-printer-job","~$cljs.core/count","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","~$devtools.formatters.printing/managed-print","~$cljs.core/pr-seq-writer","~$cljs.core/apply","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","~$devtools.formatters.state/get-current-state","~$devtools.formatters.printing/post-process-printed-output","~$devtools.formatters.printing/mark-as-markup","~$devtools.formatters.printing/build-markup","~$devtools.formatters.state/get-managed-print-level","~$devtools.formatters.printing/detect-edge-case-and-patch-it","~$cljs.core/concat","~$devtools.formatters.helpers/expandable?","~$cljs.core/native-satisfies?","~$devtools.formatters.state/update-current-state!","~$devtools.formatters.helpers/abbreviated?","~$cljs.core/with-meta","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","~$devtools.formatters.printing/markup?","~$cljs.core/get","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","~$devtools.prefs/pref","~$cljs.core/-pr-writer","~$cljs.core/nth","~$cljs.core/meta","~$devtools.formatters.printing/alt-printer-impl","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$devtools.formatters.state/*current-state*","~$devtools.formatters.printing/TemplateWriter","~$devtools.formatters.state/set-managed-print-level","~$cljs.core/first","~$devtools.formatters.printing/->TemplateWriter","~$js/Error","~$devtools.formatters.helpers/should-render?"]]],"~:cache-keys",["~#cmap",[["^1J","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","~$goog.dom.HtmlElement"]]],["^1J","devtools/formatters/printing.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","^Q","^R","^S","^T","^U"]]],["^1J","devtools/formatters/helpers.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","^Q","~$devtools.munging","^R","^S"]]],["^1J","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","~$goog.array","~$goog.asserts"]]],["^1J","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1J","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3@"]]],["^1J","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3="]]],["^1J","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3="]]],"~:SHADOW-TIMESTAMP",[1685823418000,1685823418000,1656456276000],["^1J","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","~$goog.reflect"]]],["^1J","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","~$goog.fs.blob","^3A","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3C","^3D","^3E","^3F"]]],["^1J","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","^3=","~$goog.html.SafeUrl","^3E","^3F","^3@"]]],["^1J","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3J","~$goog.html.SafeStyle","^3L","^3B","~$goog.html.uncheckedconversions","^3E","^3@"]]],["^1J","devtools/prefs.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","~$devtools.defaults"]]],["^1J","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1J","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","^3=","~$goog.dom.TagName","~$goog.dom.tags","^3J","^3P","~$goog.html.SafeStyleSheet","^3L","^3B","^3K","^3C","^3D","~$goog.labs.userAgent.browser","^3?","^3E","^3F","^3@"]]],["^1J","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3?"]]],["^1J","devtools/munging.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","~$clojure.string","~$devtools.context","^3?","~$goog.string.StringBuffer"]]],["^1J","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<"]]],["^1J","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1J","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","^3=","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1J","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",[]]],["^1J","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","^3?"]]],["^1J","clojure/string.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","^42","^3["]]],["^1J","devtools/formatters/state.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V"]]],["^1J","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","~$goog.dom.safe","^3Q","^3E","^3@"]]],["^1J","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3@"]]],["^1J","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3<","^3=","^3N","~$goog.math"]]],["^1J","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","^3O","^3J","^3P","^3W","^3L","^3B","^3E","^3@","^3C"]]],["^1J","devtools/defaults.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V"]]],["^1J","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W"]]],["^1J","cljs/core.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","~$goog.math.Long","~$goog.math.Integer","^42","^3?","^3<","~$goog.Uri","^3["]]],["^1J","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3E","^3F","^3K","^3="]]],["^1J","devtools/context.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V"]]],["^1J","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3E","^3P","^3F","^3<","^3?","^3=","^3@"]]],["^1J","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3H"]]],["^1J","devtools/format.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V","^3Z"]]],["^1J","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","^42"]]],["^1J","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^3=","^3F"]]],["^1J","devtools/protocols.cljs"],["9432bfc5d0296e77ac71acb198623716c16f4aa6","^36",["^ ","^37",null,"^38",["^J",[]],"^39",["^W","^V"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/porko/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/prefs.clj",1672733856000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/tagged_literals.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/env.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/impl.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/oops.clj",1672733856000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes/and_or.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1672733856000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64_vlq.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/externs.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/data.json/2.3.1/data.json-2.3.1.jar!/clojure/data/json.clj",1656456275000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/core.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/munging.clj",1672733856000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/compiler.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/instant.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/util.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/js_deps.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1648318251000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W"],"^X",["^J",["^Y","^Z"]],"~:shadow/js-access-global",["^J",["Error"]],"^[",["^ ","^10","^S","^11","^U","^12","^S","^13","^R","^14","^T","^15","^T","^16","^S","^17","^U","^18","^T","^19","^U","^1:","^Q","^1;","^T","^1<","^T","^1=","^U","^1>","^S","^1?","^T","^1@","^U","^1A","^T"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^J",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1C",["~$quote",["^1C",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^J",["^58"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^57",["^J",["^58","^59"]],"^K","^31","^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1C",[["^5>","^5?"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"~:variadic?",false,"^5:","^5;","^7",31,"~:ret-tag","^2Z","^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^5<",["^1C",["^5=",["^1C",[["^5>","^5?"]]]]],"^5@",["^J",["^58"]],"^5A","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^5<",["^1C",["^5=",["^1C",[["~$obj","~$writer","~$opts"]]]]]],"^K","^2U","^6","devtools/formatters/printing.cljs","^:",23,"^5B",["^1C",[["^5J","^5K","^5L"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",112,"^9",112,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5J","^5K","^5L"]]]]]],"~$markup?",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^5<",["^1C",["^5=",["^1C",[["~$value"]]]]]],"^K","^2M","^6","devtools/formatters/printing.cljs","^:",14,"^5B",["^1C",[["^5N"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",13,"^5F","~$any","^9",13,"^5G",1,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5N"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^5<",["^1C",["^5=",["^1C",[["^5>","^5N","^5?"]]]]]],"^K","^2L","^6","devtools/formatters/printing.cljs","^:",35,"^5B",["^1C",[["^5>","^5N","^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",62,"^5F",["^J",[null,"~$cljs.core/IVector"]],"^9",62,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5>","^5N","^5?"]]]]]],"~$mark-as-markup",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^5<",["^1C",["^5=",["^1C",[["^5N"]]]]]],"^K","^2B","^6","devtools/formatters/printing.cljs","^:",21,"^5B",["^1C",[["^5N"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",16,"^5F",["^J",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",16,"^5G",1,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5N"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^5<",["^1C",["^5=",["^1C",[["^5>","^5J","^5?"]]]]]],"^K","^2E","^6","devtools/formatters/printing.cljs","^:",36,"^5B",["^1C",[["^5>","^5J","^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",78,"^5F",["^J",[null,"^5Q"]],"^9",78,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5>","^5J","^5?"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^5<",["^1C",["^5=",["^1C",[["^5>","^5J","^5?"]]]]]],"^K","^2;","^6","devtools/formatters/printing.cljs","^:",40,"^5B",["^1C",[["^5>","^5J","^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",48,"^5F",["^J",[null,"^5Q"]],"^9",48,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5>","^5J","^5?"]]]]]],"~$managed-print-via-writer",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^5<",["^1C",["^5=",["^1C",[["^5N","~$tag","^5?"]]]]]],"^K","^25","^6","devtools/formatters/printing.cljs","^:",31,"^5B",["^1C",[["^5N","^5Y","^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",139,"^5F","~$cljs.core/LazySeq","^9",139,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5N","^5Y","^5?"]]]]]],"~$already-reference?",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^5<",["^1C",["^5=",["^1C",[["^5>"]]]]]],"^K","^24","^6","devtools/formatters/printing.cljs","^:",25,"^5B",["^1C",[["^5>"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",44,"^5F",["^J",["~$boolean","^5U"]],"^9",44,"^5G",1,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5>"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^57",["^J",["^58","^59"]],"^K","^2Z","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^5@",["^J",["^58"]]],"~$wrap-value-as-reference-if-needed",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^5<",["^1C",["^5=",["^1C",[["^5?","^5N"]]]]]],"^K","^2P","^6","devtools/formatters/printing.cljs","^:",40,"^5B",["^1C",[["^5?","^5N"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",24,"^5F",["^J",[null,"^5S","^5T","^5U"]],"^9",24,"^5G",2,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5?","^5N"]]]]]],"~$managed-print-via-protocol",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^5<",["^1C",["^5=",["^1C",[["^5N","^5Y","^5?"]]]]]],"^K","^1X","^6","devtools/formatters/printing.cljs","^:",33,"^5B",["^1C",[["^5N","^5Y","^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",143,"^5F","^5Z","^9",143,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5N","^5Y","^5?"]]]]]],"~$alt-printer-job",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^5<",["^1C",["^5=",["^1C",[["^5J","^5K","^5L"]]]]]],"^K","^29","^6","devtools/formatters/printing.cljs","^:",22,"^5B",["^1C",[["^5J","^5K","^5L"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",100,"^5F","^5O","^9",100,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5J","^5K","^5L"]]]]]],"~$make-template-writer",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^5<",["^1C",["^5=",["^1C",[["^5?"]]]]]],"^K","^20","^6","devtools/formatters/printing.cljs","^:",27,"^5B",["^1C",[["^5?"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",39,"^5F","^2Z","^9",39,"^5G",1,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5?"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^5<",["^1C",["^5=",["^1C",[["^5>","^5?","~$circular?"]]]]]],"^K","^2?","^6","devtools/formatters/printing.cljs","^:",47,"^5B",["^1C",[["^5>","^5?","^6<"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",57,"^5F",["^J",[null,"^5Q"]],"^9",57,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5>","^5?","^6<"]]]]]],"~$managed-print",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^5<",["^1C",["^5=",["^1C",[["^5Y","^5?","~$printer"]]]]]],"^K","^2<","^6","devtools/formatters/printing.cljs","^:",20,"^5B",["^1C",[["^5Y","^5?","^6>"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",123,"^5F","^5Z","^9",123,"^5G",3,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^5Y","^5?","^6>"]]]]]],"~$build-markup",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^5<",["^1C",["^5=",["^1C",[["^5?","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5E",true,"~:fixed-arity",2,"^5G",2,"^5B",[["^1C",["^5?","^6@","^6A"]]],"^5<",["^1C",[["^5?","^6@","~$&","^6A"]]],"^5D",["^1C",[null]]]],"^K","^2C","^6","devtools/formatters/printing.cljs","^:",19,"^6B",["^ ","^5E",true,"^6C",2,"^5G",2,"^5B",[["^1C",["^5?","^6@","^6A"]]],"^5<",["^1C",[["^5?","^6@","~$&","^6A"]]],"^5D",["^1C",[null]]],"^5B",[["^1C",["^5?","^6@","^6A"]]],"^5C",null,"^6C",2,"^5D",["^1C",[null]],"^8",1,"^5E",true,"~:methods",[["^ ","^6C",2,"^5E",true,"^65",["^J",["^5S","^5T","^5U"]]]],"^7",19,"^5F","^5O","^9",19,"^5G",2,"^5H",true,"^5<",["^1C",[["^5?","^6@","~$&","^6A"]]]],"~$post-process-printed-output",["^ ","^56",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^5<",["^1C",["^5=",["^1C",[["~$output-group","^5J","^5?","^6<"]]]]]],"^K","^2A","^6","devtools/formatters/printing.cljs","^:",34,"^5B",["^1C",[["^6F","^5J","^5?","^6<"]]],"^5C",null,"^5D",["^1C",[null,null]],"^8",1,"^5E",false,"^7",91,"^5F",["^J",[null,"^5Q"]],"^9",91,"^5G",4,"^5H",true,"^5<",["^1C",["^5=",["^1C",[["^6F","^5J","^5?","^6<"]]]]]]],"^Z",["^ ","^H","^H","^V","^V","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^X",["^J",["~:render-metas","~:else","~:max-header-elements","^5>","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^5?","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^6Z","^6P","^5>","^6W","^5?","^6U","^6M","^6V","^6R","^6T","^6H","^6L","^6N","^6I","^6O","^6Y","^6K","^6S","^6X","^6Q","^6J"]],"^1F",["^ ","^Z",["^J",[]],"^Y",["^J",[]]],"^1G",["^ "],"^1H",["^W","^V","^Q","^R","^S","^T","^U"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^35",[["^72","~:static-fns"],true,["^72","~:shadow-tweaks"],null,["^72","~:source-map-inline"],null,["^72","~:elide-asserts"],false,["^72","~:optimize-constants"],null,["^72","^1M"],null,["^72","~:external-config"],null,["^72","~:tooling-config"],null,["^72","~:emit-constants"],null,["^72","~:load-tests"],null,["^72","~:form-size-threshold"],null,["^72","~:data-readers"],null,["^72","~:infer-externs"],"~:auto",["^72","^1O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^72","~:fn-invoke-direct"],null,["^72","~:source-map"],"/dev/null"]]]